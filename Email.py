from email.mime.multipart import MIMEMultipart
from email.mime.application import MIMEApplication
from email.mime.text import MIMEText
import ssl
import smtplib
from datetime import datetime
import os
import pickle
import csv
import sys
import ReportGeneration


def send_mail_admin(From, To, name, Password):
    # Create a multipart message
    msg = MIMEMultipart()
    body_part = MIMEText('Attendance list generated by Group 7', 'plain')
    msg['Subject'] = 'Smart Attendance'
    msg['From'] = From
    msg['To'] = To
    # Add body to email
    msg.attach(body_part)
    # open and read the CSV file in binary
    with open('report.csv', 'rb') as file:
        # Attach the file with filename to the email
        msg.attach(MIMEApplication(file.read(), Name='Report.csv'))

    # Create SMTP object
    context = ssl.create_default_context()
    with smtplib.SMTP_SSL('smtp.gmail.com', 465, context=context) as smtp:
        smtp.login(From, Password)
        try:
            smtp.sendmail(msg['From'], msg['To'], msg.as_string())
        except:
            print(f'mail not sent to {name} due to :', sys.exc_info()[0])

def send_mail_absentees(name, to, From, Password):
    # Create a multipart message
    msg = MIMEMultipart()
    today = datetime.today()
    today = today.strftime("%d/%m/%Y")
    body_part = MIMEText(f'{name} was absent on {today}', 'plain')
    msg['Subject'] = 'Absent in Class'
    msg['From'] = From
    msg['To'] = to
    msg.attach(body_part)

    # Create SMTP object
    context = ssl.create_default_context()
    with smtplib.SMTP_SSL('smtp.gmail.com',465,context = context) as smtp:
        smtp.login(From, Password)
        try:
            smtp.sendmail(msg['From'], msg['To'], msg.as_string())
        except:
            print(f'mail not sent to {name} due to :', sys.exc_info()[0])

def emailToAbsentees(From, Password):
    # sending mails to absentees
    today = datetime.today()
    today = today.strftime("F%d_%m_%Y")
    attendanceList = {}
    if os.path.exists(f'Resources/AttendanceList/{today}.dat'):
        with open(f'Resources/AttendanceList/{today}.dat', 'rb') as f:
            attendanceList = pickle.load(f)
    else:
        print(f'{today} File Not Found')
        return

    with open('Resources/StudentDetails.csv') as f1:
        reader1 = csv.reader(f1)
        next(reader1)
        for enroll, roll, name, email, phone in reader1:
            if attendanceList[enroll][0] == 'A':
                send_mail_absentees(name, email, From, Password)
                break

def emailToAdmin(From, Password, start, end):
    ReportGeneration.generate_report(start, end)
    with open('Resources/AdminDetails.csv') as file:
        reader = csv.reader(file)
        next(reader)
        for name, email in reader:
            send_mail_admin(From, email, name, Password)